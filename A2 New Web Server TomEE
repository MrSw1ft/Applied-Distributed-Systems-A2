//Name:Roland Swift
//Student Number:12174746
//Assignment 2 Web Server TomEE


import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

@Path("/data")
public class DataResource {
    
    @GET
    @Path("/fire")
    @Produces(MediaType.APPLICATION_JSON)
    public List<FireData> getFireData() {
        // retrieve and return current and historical fire data from the database
    }
    
    @GET
    @Path("/drone")
    @Produces(MediaType.APPLICATION_JSON)
    public List<DroneData> getDroneData() {
        // retrieve and return current and historical drone data from the database
    }
    
    @GET
    @Path("/truck")
    @Produces(MediaType.APPLICATION_JSON)
    public List<TruckData> getTruckData() {
        // retrieve and return current and historical fire truck data from the database
    }
}

----------------------------------------------------------------------

I have been working on the requirements of Section b. 2.3.


//Name:Roland Swift
//Student Number:12174746
//Assignment 2 Web Server TomEE


import javax.ws.rs.GET; 
import javax.ws.rs.POST; 
import javax.ws.rs.Path; 
import javax.ws.rs.PathParam; 
import javax.ws.rs.Produces; 
import javax.ws.rs.core.MediaType; 

@Path("/data") 
    
    @GET 
    @Path("/fire") 
    @Produces(MediaType.APPLICATION_JSON) 
    
        
    }
    
    
    @Produces(MediaType.APPLICATION_JSON) /
    public List<DroneData> getDroneData() {
        // Retrieve current and historical drone data from the database
        // Return the data as a list of DroneData objects
    }
    
    @GET // Define HTTP method for this endpoint
    @Path("/truck") 
    @Produces(MediaType.APPLICATION_JSON) 
    public List<TruckData> getTruckData() {

    }
    
    @POST 
    @Path("/truck/{fireId}") 
    public Response sendFireTruck(@PathParam("fireId") int fireId) {
        
        return Response.ok().build(); 
    }
}

------------------------------------------------------------------

//Name:Roland Swift
//Student Number:12174746
//Assignment 2 Web Server TomEE


package com.mycompany.drone_web_server;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

@Path("/WebServerTruck")
public class WebServer {

    @GET
    @Produces(MediaType.TEXT_PLAIN)
    public void sendTruck() {
        Connection cn = null;
        try {
            ResultSet rs1;
            Statement stmt = cn.createStatement();

            // Fetch all active fires
            rs1 = stmt.executeQuery("select * from fire where isActive='1'");
            if (rs1.next()) {

                ResultSet rs, rslt, rsltAr;
                rs = stmt.executeQuery("select id from fire where isActive='1'");
                while (rs.next()) {

                    // Find an available truck for the fire
                    rslt = stmt.executeQuery("select * from truck where designatedFireId='0'");
                    if (rslt.next()) {

                        // Get the first available truck
                        rsltAr = stmt.executeQuery("select id from truck where designatedFireId='0' limit 0,1 ");
                        while (rsltAr.next()) {
                            Statement stmtnew = cn.createStatement();

                            // Assign the fire category to the truck
                            stmtnew.executeUpdate("update truck set cat='" + rs.getString(1) + "' where id='" + rsltAr.getString(1) + "'");
                        }
                    }
                }
            }
            cn.close();

        } catch (Exception e) {
            System.out.println(e);
        }
    }
}












